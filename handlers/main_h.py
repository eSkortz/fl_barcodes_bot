from aiogram import Router, F, Bot
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.state import StatesGroup, State
from keyboards import start_k, only_to_main_k
from config import BOT_TOKEN

router = Router()
bot = Bot(token=BOT_TOKEN)


class Patterns(StatesGroup):
    waiting_to_id = State()


async def sth_error(message: Message, error_text: str) -> None:
    markup_inline = only_to_main_k.get()
    await message.answer(
        text=f"‚õîÔ∏è –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫\n\n–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: {error_text}",
        reply_markup=markup_inline,
    )


@router.callback_query(F.data == "main_menu")
async def main_menu(callback: CallbackQuery) -> None:
    try:
        markup_inline = start_k.get()
        await callback.message.delete()
        await callback.message.answer(
            text=(
                "ü§ñ –ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è –ø–æ–º–æ—â–∏ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞—Ä–∫–æ–¥–∞–º–∏. "
                + "–Ø –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å–æ–∑–¥–∞—Ç—å –±–∞—Ä–∫–æ–¥—ã, —É–¥–∞–ª–∏—Ç—å –∏—Ö –∏–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å "
                + "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∏–º–µ—é—â–∏–º—Å—è –±–∞—Ä–∫–æ–¥–∞–º"
            ),
            reply_markup=markup_inline,
        )
    except Exception as exception:
        await sth_error(callback.message, exception)
